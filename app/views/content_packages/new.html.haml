:javascript
  YmContent.ContentPackages.descriptions = #{Hash[ContentType.all.map{|ct| [ct.id, ct.description]}].to_json};
  $(document).ready(function(){
    YmContent.ContentPackages.initForm();
    $( ".autocomplete-select" ).combobox();
  });


.container.page-margin-bottom
  .row
    .col-xs-12
      .cms-page-header
        %h1=title "New content"

  .row
    .col-md-8.col-md-offset-2
      .form-container
        =semantic_form_for @content_package do |form|
          =form.inputs do
            =form.input :parent_id, :as => :hidden
            =form.input :name
            =form.input :content_type, :as => :select, :collection => @content_types, :label => "Search content templates", :required => false, :input_html => { :class => "autocomplete-select"}

            %h3{"aria-controls" => "collapseContext", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#collapseContext"} Add context
            #collapseContext.collapse
              %p.lead Write an objective/goal for this content
              .cms-edit-context-box
                =form.input :notes, :label => 'Content objective/goal', :input_html => {:rows => 4}, :class => "content-objective-goal"
            
            %h3{"aria-controls" => "collapseAudience", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#collapseAudience"} Select the intended audience for this content
            #collapseAudience.collapse
              =form.inputs do
                -PersonaGroup.all.each do |group|
                  .persona-group-select
                    %h4.col-primary.cms-edit-group-title=group
                    =form.input :personas, :as => :check_boxes, :collection => group.personas, :label => false, :member_label => :to_s
            .clearfix
            
            %h3{"aria-controls" => "collapseAuthor", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#collapseAuthor"} Assign author
            #collapseAuthor.collapse
              =form.inputs do
                =form.input :requested_by, :collection => User.where(:role => 'admin')
                =form.input :author, :collection => User.where("role<>''").map { |u| ["#{u.full_name} (#{u.role})", u.id] }
                =form.input :due_date, :order => [:day, :month, :year], :include_blank => false, :start_year => Date.today.year
                =form.input :review_frequency, :as => :radio, :collection => ContentPackage.review_frequencies.invert

            .clearfix
            =form.action :submit, :label => 'Finish', :wrapper_html => { :class => 'btn btn-success pull-right' }

