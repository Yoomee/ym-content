.container.cms-main
  .row
    .col-md-6.col-md-offset-3.mb-4
      %h2
        =title "New content"
        %i.fa.fa-file.pull-left
      .tabs-wrap
        %ul.nav.nav-tabs
          %li.active=link_to("Content type", '#content-type', 'data-toggle' => 'tab')
          %li=link_to("Add context", '#context', 'data-toggle' => 'tab')
          %li=link_to("Assign author", '#author', 'data-toggle' => 'tab')
        %hr
      =semantic_form_for @content_package do |form|
        .tab-content
          #content-type.tab-pane.active
            =form.inputs do
              =form.input :parent_id, :as => :hidden
              =form.input :name
              %br
              =form.input :content_type, :as => :radio, :label => "Select a content type below", :required => false
              =link_to("Next", '#context', 'data-toggle' => 'tab', :class => 'btn mt-3')
          #context.tab-pane
            %i.fa.fa-group.pull-left
            %h4.mb-3 Select the intended audience for this content

            =form.inputs do
              -PersonaGroup.all.each do |group|
                .persona-group-select
                  %h5.cms-edit-group-title=group
                  =form.input :personas, :as => :check_boxes, :collection => group.personas, :label => false
              %br.clear
              %h4 Write an objective/goal for this content
              .cms-edit-context-box
                =form.input :notes, :label => 'Content objective/goal', :input_html => {:rows => 4}, :class => "content-objective-goal"
              =link_to("Previous", '#content-type', 'data-toggle' => 'tab', :class => 'btn pull-left')
              =link_to("Next", '#author', 'data-toggle' => 'tab', :class => 'btn btn-primary3')
          #author.tab-pane
            =form.inputs do
              =form.input :requested_by, :collection => User.where(:role => 'admin')
              =form.input :author, :collection => User.where("role<>''").map { |u| ["#{u.full_name} (#{u.role})", u.id] }
              =form.input :due_date
              =form.input :review_frequency, :as => :radio, :collection => ContentPackage.review_frequencies.invert
            =form.action :submit, :label => 'Finish'
