- open = @open && @open.include?(content_package)
- parents = parents.try(:dup) || []
%tr.content-package{:class => "status-#{content_package.status} #{'has-children' unless content_package.children.count.zero?}", :id => "content-package-#{content_package.id}", :data => {:depth => parents.size}}
  %td.td-name{:data => {:open => (open ? 1 : 0), :loaded => (open ? 1 : 0)}}
    =sitemap_spacers(content_package, parents)
    %span.name
      - unless content_package.children.count.zero?
        %i.fa.sitemap-caret{:class => "fa-caret-#{open ? 'down' : 'right'}"}
      =content_package
  %td{:class => "td-status td-status-#{content_package.status}"}
    =status(content_package.status)
  %td{:class => "td-status td-status-#{content_package.status}"}
    =content_package.due_date.try(:strftime, '%b %d, %Y')
  %td
    =link_to('View', content_package) unless content_package.viewless?
  %td
    =link_to('Edit', edit_content_package_path(content_package))
  %td
    .dropdown
      =link_to('More&hellip;'.html_safe, '#', 'data-toggle' => 'dropdown')
      %ul.dropdown-menu
        %li=link_to('Add child', new_content_package_path(:parent => content_package.id))
        -if content_package.children.count > 1
          %li=link_to('Reorder children', reorder_content_package_path(content_package))
- parents << content_package
-if open
  -content_package.children.each do |child|
    =render('content_package', :content_package => child, :parents => parents)
