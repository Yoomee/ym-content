.nested-fields.cms-form-well
  =f.inputs do
    =f.input :name, :label => 'Field name'
    =f.input :field_type, :as => :select, :collection => ContentAttribute.field_types.invert, :prompt => "Select..."
    =#link_to('Show more', '#' , :class => 'btn btn-primary1 btn-small reveal pull-right')
    =f.input :description, :input_html => {:rows => 2}
    .character-limit-inputs{:class => f.object.limitable? ? '' : 'hide'}
      =f.input :limit_quantity
      =f.input :limit_unit, :as => :select, :collection => [['Characters', 'character'], ['Words', 'word']], :include_blank => false
    .sir-trevor-settings{:class => f.object.field_type == 'rich' ? '' : 'hide'}
      %p
        Select the number of content blocks that can be used, selecting 0 will make that block unavailable and leaving a field blank will mean there is no limit on that block type
      -ContentAttribute::DEFAULT_SIR_TREVOR_BLOCK_TYPES.each do |block_type|
        -value = f.object.sir_trevor_settings_json[block_type]
        .block-type-setting
          %h4=block_type
          =check_box_tag "#{f.object_name}[sir_trevor_settings][#{block_type}_required]", 1 ,value["required"]
          %span=label_tag "#{block_type}_required", "Required?"
          %br
            =label_tag "#{block_type}_required", "Number of blocks allowed (leave blank for no limit)"
            =number_field_tag "#{f.object_name}[sir_trevor_settings][#{block_type}_limit]", value["limit"]
    .resource-content-type{:class => f.object.field_type == 'resource' ? '' : 'hide'}
      %p
        Limit the template that can be linked to from this template
      =f.input :resource_content_type, collection: ContentType.all

    =f.input :position, :as => :hidden
    .form-group
      .row
        .col-md-6
          =f.input :required, :default => false, :label => "This is a required field"
        .col-md-6
          =f.input :meta, :default => false, :label => "This is a meta attribute"
    .meta-attributes{:class => f.object.meta? ? '' : 'hide'}
      %p
        The site has default values for meta tags. Adding a meta attribute here allows editors to override them on pages using this content template.
      =f.input :meta_tag_name, :as => :select, :collection => ContentAttribute::META_TAG_TYPES, :label => 'Choose the type of meta tag', :hint => "Meta tags for SEO and social networks are generated from this information. You only need one of each type per template. "
      =f.input :default_attribute, :as => :select, :collection => @content_type.content_attributes.select{|a| !a.meta?}, :label => "Select a value for this meta tag to default to", :prompt => "Select..."
    %hr
    =link_to_remove_association "Remove attribute", f, :class => 'pull-right btn btn-sm btn-warning'
    .clearfix
